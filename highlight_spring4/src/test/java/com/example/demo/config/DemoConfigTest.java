package com.example.demo.config;import com.example.demo.pojo.Person;import com.example.demo.service.DemoPrototypeService;import com.example.demo.service.DemoSingletonService;import com.example.demo.service.UseFunctionService;import org.junit.Test;import org.junit.runner.RunWith;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.boot.test.context.SpringBootTest;import org.springframework.context.annotation.AnnotationConfigApplicationContext;import org.springframework.test.context.junit4.SpringRunner;import static org.junit.Assert.*;@RunWith(SpringRunner.class)@SpringBootTestpublic class DemoConfigTest {    @Autowired    Person person;    @Test    public void test1() {        // 使用AnnotationConfigApplicationContext作为spring容器，接收一个配置类作为参数        AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(DemoConfig.class);        UseFunctionService service = context.getBean(UseFunctionService.class);        String value = service.sayHello("Word");        assertEquals(value, "HelloWord");        context.close();    }    @Test    public void test2() {        AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(DemoConfig.class);        DemoSingletonService s1 = context.getBean(DemoSingletonService.class);        DemoSingletonService s2 = context.getBean(DemoSingletonService.class);        DemoPrototypeService p1 = context.getBean(DemoPrototypeService.class);        DemoPrototypeService p2 = context.getBean(DemoPrototypeService.class);        assertEquals(s1, s2);        assertNotEquals(p1, p2);        context.close();    }    @Test    public void test3() {        assert person != null;        person.setAge(12);        person.setName("12");        System.out.println(person);    }}